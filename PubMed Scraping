from Bio import Entrez
import requests
import xlsxwriter
from bs4 import BeautifulSoup
import time
import sys
import logging

def search(query):
    Entrez.email = 'ethan.yi.hu@uconn.edu'
    handle = Entrez.esearch(db='pubmed', 
                            sort='relevance', 
                            retmax='20',
                            retmode='xml', 
                            term=query)
    results = Entrez.read(handle)
    return results


def fetch_details(id_list):
    ids = ','.join(id_list)
    Entrez.email = 'ethan.yi.hu@uconn.edu'
    handle = Entrez.efetch(db='pubmed',
                           retmode='xml',
                           id=ids)
    results = Entrez.read(handle)
    return results

def writeExcel(row=0, ArticleTitle='',ArticleDate='',ArticleVolumn='',ArticlePage='',DateRevised=''):
    if row == 0:
        worksheet.write(row, 0, 'Article Title')
        worksheet.write(row, 1, 'Article Date')
        worksheet.write(row, 2, 'Article Volumn')
        worksheet.write(row, 3, 'Article Page')
        worksheet.write(row, 5, 'Date Revised')
        
    else:
        worksheet.write(row, 0, ArticleTitle)
        worksheet.write(row, 1, ArticleDate)
        worksheet.write(row, 2, ArticleVolumn)
        worksheet.write(row, 3, ArticlePage)
        worksheet.write(row, 5, DateRevised)


def start():
    cursor = 0
    results = search('intubation OR intubate*')
    id_list = results['IdList']
    papers = fetch_details(id_list)
    writeExcel(row=cursor)
    for i, paper in enumerate(papers['PubmedArticle']):
        if paper['MedlineCitation']:
            cursor += 1
            writeExcel(row=cursor,ArticleTitle = ("{}) {}".format(i+1, paper['MedlineCitation']['Article']['ArticleTitle'])),
                      ArticleDate=("{}) {}".format(i+1, paper['MedlineCitation']['Article']['Journal']['JournalIssue']['PubDate'])),
                      ArticleVolumn=("{}) {}".format(i+1, paper['MedlineCitation']['Article']['Journal']['JournalIssue']['PubDate'])),
                      ArticlePage=("{}) {}".format(i+1, paper['MedlineCitation']['Article']['Pagination']['MedlinePgn'])),
                      DateRevised=("{}) {}".format(i+1, paper['MedlineCitation']['DateRevised']))
                     )

if __name__ == '__main__':
    pubmed = sys.argv[1:] 
    try:
        if pubmed:
            workbook = xlsxwriter.Workbook("pubmedresults" + '.xlsx')
            worksheet = workbook.add_worksheet()
            start()
            workbook.close()
            print('completed')
    except ValueError:
        print('something went wrong, please try again! ')


    # Pretty print the first paper in full to observe its structure
    #import json
    #print(json.dumps(papers[0], indent=2, separators=(',', ':')))
